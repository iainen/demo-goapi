// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.11.0
// source: query/Metric.proto

package v3

import (
	v3 "goapi/demo/common/v3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HeapStatus int32

const (
	HeapStatus_NoHeap HeapStatus = 0
	HeapStatus_Heap   HeapStatus = 1
)

// Enum value maps for HeapStatus.
var (
	HeapStatus_name = map[int32]string{
		0: "NoHeap",
		1: "Heap",
	}
	HeapStatus_value = map[string]int32{
		"NoHeap": 0,
		"Heap":   1,
	}
)

func (x HeapStatus) Enum() *HeapStatus {
	p := new(HeapStatus)
	*p = x
	return p
}

func (x HeapStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HeapStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_query_Metric_proto_enumTypes[0].Descriptor()
}

func (HeapStatus) Type() protoreflect.EnumType {
	return &file_query_Metric_proto_enumTypes[0]
}

func (x HeapStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HeapStatus.Descriptor instead.
func (HeapStatus) EnumDescriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{0}
}

type CpuUsageParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceInstance string `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	Service         string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	StartTime       int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *CpuUsageParam) Reset() {
	*x = CpuUsageParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CpuUsageParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuUsageParam) ProtoMessage() {}

func (x *CpuUsageParam) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuUsageParam.ProtoReflect.Descriptor instead.
func (*CpuUsageParam) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{0}
}

func (x *CpuUsageParam) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CpuUsageParam) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *CpuUsageParam) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *CpuUsageParam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CpuUsageParam) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type CpuUsageRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    v3.ErrCode                 `protobuf:"varint,1,opt,name=code,proto3,enum=demo.v3.ErrCode" json:"code,omitempty"`
	Message string                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*CpuUsageRspCpuUsageItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CpuUsageRsp) Reset() {
	*x = CpuUsageRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CpuUsageRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuUsageRsp) ProtoMessage() {}

func (x *CpuUsageRsp) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuUsageRsp.ProtoReflect.Descriptor instead.
func (*CpuUsageRsp) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{1}
}

func (x *CpuUsageRsp) GetCode() v3.ErrCode {
	if x != nil {
		return x.Code
	}
	return v3.ErrCode_ErrCode_None
}

func (x *CpuUsageRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CpuUsageRsp) GetData() []*CpuUsageRspCpuUsageItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProcessStatFdParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceInstance string `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	Service         string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	StartTime       int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *ProcessStatFdParam) Reset() {
	*x = ProcessStatFdParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatFdParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatFdParam) ProtoMessage() {}

func (x *ProcessStatFdParam) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatFdParam.ProtoReflect.Descriptor instead.
func (*ProcessStatFdParam) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessStatFdParam) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProcessStatFdParam) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *ProcessStatFdParam) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ProcessStatFdParam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ProcessStatFdParam) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ProcessStatFdRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    v3.ErrCode                `protobuf:"varint,1,opt,name=code,proto3,enum=demo.v3.ErrCode" json:"code,omitempty"`
	Message string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ProcessStatFdRspFdItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ProcessStatFdRsp) Reset() {
	*x = ProcessStatFdRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatFdRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatFdRsp) ProtoMessage() {}

func (x *ProcessStatFdRsp) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatFdRsp.ProtoReflect.Descriptor instead.
func (*ProcessStatFdRsp) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessStatFdRsp) GetCode() v3.ErrCode {
	if x != nil {
		return x.Code
	}
	return v3.ErrCode_ErrCode_None
}

func (x *ProcessStatFdRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcessStatFdRsp) GetData() []*ProcessStatFdRspFdItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProcessStatRssParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceInstance string `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	Service         string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	StartTime       int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *ProcessStatRssParam) Reset() {
	*x = ProcessStatRssParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatRssParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatRssParam) ProtoMessage() {}

func (x *ProcessStatRssParam) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatRssParam.ProtoReflect.Descriptor instead.
func (*ProcessStatRssParam) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{4}
}

func (x *ProcessStatRssParam) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProcessStatRssParam) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *ProcessStatRssParam) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ProcessStatRssParam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ProcessStatRssParam) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ProcessStatRssRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    v3.ErrCode                  `protobuf:"varint,1,opt,name=code,proto3,enum=demo.v3.ErrCode" json:"code,omitempty"`
	Message string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ProcessStatRssRspRssItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ProcessStatRssRsp) Reset() {
	*x = ProcessStatRssRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatRssRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatRssRsp) ProtoMessage() {}

func (x *ProcessStatRssRsp) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatRssRsp.ProtoReflect.Descriptor instead.
func (*ProcessStatRssRsp) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{5}
}

func (x *ProcessStatRssRsp) GetCode() v3.ErrCode {
	if x != nil {
		return x.Code
	}
	return v3.ErrCode_ErrCode_None
}

func (x *ProcessStatRssRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcessStatRssRsp) GetData() []*ProcessStatRssRspRssItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProcessStatVirtualSizeParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceInstance string `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	Service         string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	StartTime       int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *ProcessStatVirtualSizeParam) Reset() {
	*x = ProcessStatVirtualSizeParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatVirtualSizeParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatVirtualSizeParam) ProtoMessage() {}

func (x *ProcessStatVirtualSizeParam) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatVirtualSizeParam.ProtoReflect.Descriptor instead.
func (*ProcessStatVirtualSizeParam) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{6}
}

func (x *ProcessStatVirtualSizeParam) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProcessStatVirtualSizeParam) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *ProcessStatVirtualSizeParam) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ProcessStatVirtualSizeParam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ProcessStatVirtualSizeParam) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ProcessStatVirtualSizeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    v3.ErrCode                                  `protobuf:"varint,1,opt,name=code,proto3,enum=demo.v3.ErrCode" json:"code,omitempty"`
	Message string                                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ProcessStatVirtualSizeRspVirtualSizeItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ProcessStatVirtualSizeRsp) Reset() {
	*x = ProcessStatVirtualSizeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatVirtualSizeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatVirtualSizeRsp) ProtoMessage() {}

func (x *ProcessStatVirtualSizeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatVirtualSizeRsp.ProtoReflect.Descriptor instead.
func (*ProcessStatVirtualSizeRsp) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{7}
}

func (x *ProcessStatVirtualSizeRsp) GetCode() v3.ErrCode {
	if x != nil {
		return x.Code
	}
	return v3.ErrCode_ErrCode_None
}

func (x *ProcessStatVirtualSizeRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcessStatVirtualSizeRsp) GetData() []*ProcessStatVirtualSizeRspVirtualSizeItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type JvmMemParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string     `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceInstance string     `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	Service         string     `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	StartTime       int64      `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64      `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
	HeapStatus      HeapStatus `protobuf:"varint,6,opt,name=heapStatus,proto3,enum=demo.v3.HeapStatus" json:"heapStatus,omitempty"`
}

func (x *JvmMemParam) Reset() {
	*x = JvmMemParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmMemParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmMemParam) ProtoMessage() {}

func (x *JvmMemParam) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmMemParam.ProtoReflect.Descriptor instead.
func (*JvmMemParam) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{8}
}

func (x *JvmMemParam) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *JvmMemParam) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *JvmMemParam) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *JvmMemParam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *JvmMemParam) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *JvmMemParam) GetHeapStatus() HeapStatus {
	if x != nil {
		return x.HeapStatus
	}
	return HeapStatus_NoHeap
}

type JvmMemRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    v3.ErrCode             `protobuf:"varint,1,opt,name=code,proto3,enum=demo.v3.ErrCode" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*JvmMemRspJvmMemItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *JvmMemRsp) Reset() {
	*x = JvmMemRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmMemRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmMemRsp) ProtoMessage() {}

func (x *JvmMemRsp) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmMemRsp.ProtoReflect.Descriptor instead.
func (*JvmMemRsp) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{9}
}

func (x *JvmMemRsp) GetCode() v3.ErrCode {
	if x != nil {
		return x.Code
	}
	return v3.ErrCode_ErrCode_None
}

func (x *JvmMemRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JvmMemRsp) GetData() []*JvmMemRspJvmMemItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type JvmGcCountParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceInstance string `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	Service         string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	StartTime       int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *JvmGcCountParam) Reset() {
	*x = JvmGcCountParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmGcCountParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmGcCountParam) ProtoMessage() {}

func (x *JvmGcCountParam) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmGcCountParam.ProtoReflect.Descriptor instead.
func (*JvmGcCountParam) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{10}
}

func (x *JvmGcCountParam) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *JvmGcCountParam) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *JvmGcCountParam) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *JvmGcCountParam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *JvmGcCountParam) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type JvmGcCountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    v3.ErrCode                   `protobuf:"varint,1,opt,name=code,proto3,enum=demo.v3.ErrCode" json:"code,omitempty"`
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *JvmGcCountRspJvmGcCountItem `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *JvmGcCountRsp) Reset() {
	*x = JvmGcCountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmGcCountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmGcCountRsp) ProtoMessage() {}

func (x *JvmGcCountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmGcCountRsp.ProtoReflect.Descriptor instead.
func (*JvmGcCountRsp) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{11}
}

func (x *JvmGcCountRsp) GetCode() v3.ErrCode {
	if x != nil {
		return x.Code
	}
	return v3.ErrCode_ErrCode_None
}

func (x *JvmGcCountRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JvmGcCountRsp) GetData() *JvmGcCountRspJvmGcCountItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type JvmGcCostTimeParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceInstance string `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	Service         string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	StartTime       int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *JvmGcCostTimeParam) Reset() {
	*x = JvmGcCostTimeParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmGcCostTimeParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmGcCostTimeParam) ProtoMessage() {}

func (x *JvmGcCostTimeParam) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmGcCostTimeParam.ProtoReflect.Descriptor instead.
func (*JvmGcCostTimeParam) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{12}
}

func (x *JvmGcCostTimeParam) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *JvmGcCostTimeParam) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *JvmGcCostTimeParam) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *JvmGcCostTimeParam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *JvmGcCostTimeParam) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type JvmGcCostTimeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    v3.ErrCode                         `protobuf:"varint,1,opt,name=code,proto3,enum=demo.v3.ErrCode" json:"code,omitempty"`
	Message string                             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *JvmGcCostTimeRspJvmGcCostTimeItem `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *JvmGcCostTimeRsp) Reset() {
	*x = JvmGcCostTimeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmGcCostTimeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmGcCostTimeRsp) ProtoMessage() {}

func (x *JvmGcCostTimeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmGcCostTimeRsp.ProtoReflect.Descriptor instead.
func (*JvmGcCostTimeRsp) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{13}
}

func (x *JvmGcCostTimeRsp) GetCode() v3.ErrCode {
	if x != nil {
		return x.Code
	}
	return v3.ErrCode_ErrCode_None
}

func (x *JvmGcCostTimeRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JvmGcCostTimeRsp) GetData() *JvmGcCostTimeRspJvmGcCostTimeItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type JvmMemPoolParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceInstance string `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	Service         string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	StartTime       int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *JvmMemPoolParam) Reset() {
	*x = JvmMemPoolParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmMemPoolParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmMemPoolParam) ProtoMessage() {}

func (x *JvmMemPoolParam) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmMemPoolParam.ProtoReflect.Descriptor instead.
func (*JvmMemPoolParam) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{14}
}

func (x *JvmMemPoolParam) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *JvmMemPoolParam) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *JvmMemPoolParam) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *JvmMemPoolParam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *JvmMemPoolParam) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type JvmMemPoolRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    v3.ErrCode                     `protobuf:"varint,1,opt,name=code,proto3,enum=demo.v3.ErrCode" json:"code,omitempty"`
	Message string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*JvmMemPoolRspJvmMemPoolItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *JvmMemPoolRsp) Reset() {
	*x = JvmMemPoolRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmMemPoolRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmMemPoolRsp) ProtoMessage() {}

func (x *JvmMemPoolRsp) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmMemPoolRsp.ProtoReflect.Descriptor instead.
func (*JvmMemPoolRsp) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{15}
}

func (x *JvmMemPoolRsp) GetCode() v3.ErrCode {
	if x != nil {
		return x.Code
	}
	return v3.ErrCode_ErrCode_None
}

func (x *JvmMemPoolRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JvmMemPoolRsp) GetData() []*JvmMemPoolRspJvmMemPoolItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type JvmThreadParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceInstance string `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	Service         string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	StartTime       int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *JvmThreadParam) Reset() {
	*x = JvmThreadParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmThreadParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmThreadParam) ProtoMessage() {}

func (x *JvmThreadParam) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmThreadParam.ProtoReflect.Descriptor instead.
func (*JvmThreadParam) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{16}
}

func (x *JvmThreadParam) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *JvmThreadParam) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *JvmThreadParam) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *JvmThreadParam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *JvmThreadParam) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type JvmThreadRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    v3.ErrCode                   `protobuf:"varint,1,opt,name=code,proto3,enum=demo.v3.ErrCode" json:"code,omitempty"`
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*JvmThreadRspJvmThreadItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *JvmThreadRsp) Reset() {
	*x = JvmThreadRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmThreadRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmThreadRsp) ProtoMessage() {}

func (x *JvmThreadRsp) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmThreadRsp.ProtoReflect.Descriptor instead.
func (*JvmThreadRsp) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{17}
}

func (x *JvmThreadRsp) GetCode() v3.ErrCode {
	if x != nil {
		return x.Code
	}
	return v3.ErrCode_ErrCode_None
}

func (x *JvmThreadRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JvmThreadRsp) GetData() []*JvmThreadRspJvmThreadItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type JvmClassParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceInstance string `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	Service         string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	StartTime       int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *JvmClassParam) Reset() {
	*x = JvmClassParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmClassParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmClassParam) ProtoMessage() {}

func (x *JvmClassParam) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmClassParam.ProtoReflect.Descriptor instead.
func (*JvmClassParam) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{18}
}

func (x *JvmClassParam) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *JvmClassParam) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *JvmClassParam) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *JvmClassParam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *JvmClassParam) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type JvmClassRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    v3.ErrCode                 `protobuf:"varint,1,opt,name=code,proto3,enum=demo.v3.ErrCode" json:"code,omitempty"`
	Message string                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*JvmClassRspJvmClassItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *JvmClassRsp) Reset() {
	*x = JvmClassRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmClassRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmClassRsp) ProtoMessage() {}

func (x *JvmClassRsp) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmClassRsp.ProtoReflect.Descriptor instead.
func (*JvmClassRsp) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{19}
}

func (x *JvmClassRsp) GetCode() v3.ErrCode {
	if x != nil {
		return x.Code
	}
	return v3.ErrCode_ErrCode_None
}

func (x *JvmClassRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JvmClassRsp) GetData() []*JvmClassRspJvmClassItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type GoMemParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceInstance string `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	Service         string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	StartTime       int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *GoMemParam) Reset() {
	*x = GoMemParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoMemParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoMemParam) ProtoMessage() {}

func (x *GoMemParam) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoMemParam.ProtoReflect.Descriptor instead.
func (*GoMemParam) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{20}
}

func (x *GoMemParam) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GoMemParam) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *GoMemParam) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *GoMemParam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GoMemParam) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type GoMemRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    v3.ErrCode           `protobuf:"varint,1,opt,name=code,proto3,enum=demo.v3.ErrCode" json:"code,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*GoMemRspGoMemItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GoMemRsp) Reset() {
	*x = GoMemRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoMemRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoMemRsp) ProtoMessage() {}

func (x *GoMemRsp) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoMemRsp.ProtoReflect.Descriptor instead.
func (*GoMemRsp) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{21}
}

func (x *GoMemRsp) GetCode() v3.ErrCode {
	if x != nil {
		return x.Code
	}
	return v3.ErrCode_ErrCode_None
}

func (x *GoMemRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GoMemRsp) GetData() []*GoMemRspGoMemItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type GoGcCountParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceInstance string `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	Service         string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	StartTime       int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *GoGcCountParam) Reset() {
	*x = GoGcCountParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoGcCountParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoGcCountParam) ProtoMessage() {}

func (x *GoGcCountParam) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoGcCountParam.ProtoReflect.Descriptor instead.
func (*GoGcCountParam) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{22}
}

func (x *GoGcCountParam) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GoGcCountParam) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *GoGcCountParam) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *GoGcCountParam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GoGcCountParam) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type GoGcCountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    v3.ErrCode                   `protobuf:"varint,1,opt,name=code,proto3,enum=demo.v3.ErrCode" json:"code,omitempty"`
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*GoGcCountRspGoGcCountItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GoGcCountRsp) Reset() {
	*x = GoGcCountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoGcCountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoGcCountRsp) ProtoMessage() {}

func (x *GoGcCountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoGcCountRsp.ProtoReflect.Descriptor instead.
func (*GoGcCountRsp) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{23}
}

func (x *GoGcCountRsp) GetCode() v3.ErrCode {
	if x != nil {
		return x.Code
	}
	return v3.ErrCode_ErrCode_None
}

func (x *GoGcCountRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GoGcCountRsp) GetData() []*GoGcCountRspGoGcCountItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type GoroutineCountParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceInstance string `protobuf:"bytes,2,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	Service         string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	StartTime       int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *GoroutineCountParam) Reset() {
	*x = GoroutineCountParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoroutineCountParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoroutineCountParam) ProtoMessage() {}

func (x *GoroutineCountParam) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoroutineCountParam.ProtoReflect.Descriptor instead.
func (*GoroutineCountParam) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{24}
}

func (x *GoroutineCountParam) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GoroutineCountParam) GetServiceInstance() string {
	if x != nil {
		return x.ServiceInstance
	}
	return ""
}

func (x *GoroutineCountParam) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *GoroutineCountParam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GoroutineCountParam) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type GoroutineCountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    v3.ErrCode                             `protobuf:"varint,1,opt,name=code,proto3,enum=demo.v3.ErrCode" json:"code,omitempty"`
	Message string                                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*GoroutineCountRspGoroutineCountItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GoroutineCountRsp) Reset() {
	*x = GoroutineCountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoroutineCountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoroutineCountRsp) ProtoMessage() {}

func (x *GoroutineCountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoroutineCountRsp.ProtoReflect.Descriptor instead.
func (*GoroutineCountRsp) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{25}
}

func (x *GoroutineCountRsp) GetCode() v3.ErrCode {
	if x != nil {
		return x.Code
	}
	return v3.ErrCode_ErrCode_None
}

func (x *GoroutineCountRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GoroutineCountRsp) GetData() []*GoroutineCountRspGoroutineCountItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type CpuUsageRspCpuUsageItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuUsage int32 `protobuf:"varint,1,opt,name=cpuUsage,proto3" json:"cpuUsage,omitempty"`
	Time     int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *CpuUsageRspCpuUsageItem) Reset() {
	*x = CpuUsageRspCpuUsageItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CpuUsageRspCpuUsageItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuUsageRspCpuUsageItem) ProtoMessage() {}

func (x *CpuUsageRspCpuUsageItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuUsageRspCpuUsageItem.ProtoReflect.Descriptor instead.
func (*CpuUsageRspCpuUsageItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CpuUsageRspCpuUsageItem) GetCpuUsage() int32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *CpuUsageRspCpuUsageItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type ProcessStatFdRspFdItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fd   int32 `protobuf:"varint,1,opt,name=fd,proto3" json:"fd,omitempty"`
	Time int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *ProcessStatFdRspFdItem) Reset() {
	*x = ProcessStatFdRspFdItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatFdRspFdItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatFdRspFdItem) ProtoMessage() {}

func (x *ProcessStatFdRspFdItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatFdRspFdItem.ProtoReflect.Descriptor instead.
func (*ProcessStatFdRspFdItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ProcessStatFdRspFdItem) GetFd() int32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *ProcessStatFdRspFdItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type ProcessStatRssRspRssItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rss  int64 `protobuf:"varint,1,opt,name=rss,proto3" json:"rss,omitempty"`
	Time int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *ProcessStatRssRspRssItem) Reset() {
	*x = ProcessStatRssRspRssItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatRssRspRssItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatRssRspRssItem) ProtoMessage() {}

func (x *ProcessStatRssRspRssItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatRssRspRssItem.ProtoReflect.Descriptor instead.
func (*ProcessStatRssRspRssItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ProcessStatRssRspRssItem) GetRss() int64 {
	if x != nil {
		return x.Rss
	}
	return 0
}

func (x *ProcessStatRssRspRssItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type ProcessStatVirtualSizeRspVirtualSizeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualSize int64 `protobuf:"varint,1,opt,name=virtualSize,proto3" json:"virtualSize,omitempty"`
	Time        int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *ProcessStatVirtualSizeRspVirtualSizeItem) Reset() {
	*x = ProcessStatVirtualSizeRspVirtualSizeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatVirtualSizeRspVirtualSizeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatVirtualSizeRspVirtualSizeItem) ProtoMessage() {}

func (x *ProcessStatVirtualSizeRspVirtualSizeItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatVirtualSizeRspVirtualSizeItem.ProtoReflect.Descriptor instead.
func (*ProcessStatVirtualSizeRspVirtualSizeItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ProcessStatVirtualSizeRspVirtualSizeItem) GetVirtualSize() int64 {
	if x != nil {
		return x.VirtualSize
	}
	return 0
}

func (x *ProcessStatVirtualSizeRspVirtualSizeItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type JvmMemRspJvmMemItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Init      int64 `protobuf:"varint,1,opt,name=init,proto3" json:"init,omitempty"`
	Max       int64 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	Used      int64 `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	Committed int64 `protobuf:"varint,4,opt,name=committed,proto3" json:"committed,omitempty"`
	Time      int64 `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *JvmMemRspJvmMemItem) Reset() {
	*x = JvmMemRspJvmMemItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmMemRspJvmMemItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmMemRspJvmMemItem) ProtoMessage() {}

func (x *JvmMemRspJvmMemItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmMemRspJvmMemItem.ProtoReflect.Descriptor instead.
func (*JvmMemRspJvmMemItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{9, 0}
}

func (x *JvmMemRspJvmMemItem) GetInit() int64 {
	if x != nil {
		return x.Init
	}
	return 0
}

func (x *JvmMemRspJvmMemItem) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *JvmMemRspJvmMemItem) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *JvmMemRspJvmMemItem) GetCommitted() int64 {
	if x != nil {
		return x.Committed
	}
	return 0
}

func (x *JvmMemRspJvmMemItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type JvmGcCountRspOldItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Time  int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *JvmGcCountRspOldItem) Reset() {
	*x = JvmGcCountRspOldItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmGcCountRspOldItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmGcCountRspOldItem) ProtoMessage() {}

func (x *JvmGcCountRspOldItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmGcCountRspOldItem.ProtoReflect.Descriptor instead.
func (*JvmGcCountRspOldItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{11, 0}
}

func (x *JvmGcCountRspOldItem) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *JvmGcCountRspOldItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type JvmGcCountRspYoungItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Time  int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *JvmGcCountRspYoungItem) Reset() {
	*x = JvmGcCountRspYoungItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmGcCountRspYoungItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmGcCountRspYoungItem) ProtoMessage() {}

func (x *JvmGcCountRspYoungItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmGcCountRspYoungItem.ProtoReflect.Descriptor instead.
func (*JvmGcCountRspYoungItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{11, 1}
}

func (x *JvmGcCountRspYoungItem) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *JvmGcCountRspYoungItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type JvmGcCountRspJvmGcCountItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Old   []*JvmGcCountRspOldItem   `protobuf:"bytes,1,rep,name=old,proto3" json:"old,omitempty"`
	Young []*JvmGcCountRspYoungItem `protobuf:"bytes,2,rep,name=young,proto3" json:"young,omitempty"`
}

func (x *JvmGcCountRspJvmGcCountItem) Reset() {
	*x = JvmGcCountRspJvmGcCountItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmGcCountRspJvmGcCountItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmGcCountRspJvmGcCountItem) ProtoMessage() {}

func (x *JvmGcCountRspJvmGcCountItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmGcCountRspJvmGcCountItem.ProtoReflect.Descriptor instead.
func (*JvmGcCountRspJvmGcCountItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{11, 2}
}

func (x *JvmGcCountRspJvmGcCountItem) GetOld() []*JvmGcCountRspOldItem {
	if x != nil {
		return x.Old
	}
	return nil
}

func (x *JvmGcCountRspJvmGcCountItem) GetYoung() []*JvmGcCountRspYoungItem {
	if x != nil {
		return x.Young
	}
	return nil
}

type JvmGcCostTimeRspOldItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostTime int32 `protobuf:"varint,1,opt,name=costTime,proto3" json:"costTime,omitempty"`
	Time     int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *JvmGcCostTimeRspOldItem) Reset() {
	*x = JvmGcCostTimeRspOldItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmGcCostTimeRspOldItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmGcCostTimeRspOldItem) ProtoMessage() {}

func (x *JvmGcCostTimeRspOldItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmGcCostTimeRspOldItem.ProtoReflect.Descriptor instead.
func (*JvmGcCostTimeRspOldItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{13, 0}
}

func (x *JvmGcCostTimeRspOldItem) GetCostTime() int32 {
	if x != nil {
		return x.CostTime
	}
	return 0
}

func (x *JvmGcCostTimeRspOldItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type JvmGcCostTimeRspYoungItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostTime int32 `protobuf:"varint,1,opt,name=costTime,proto3" json:"costTime,omitempty"`
	Time     int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *JvmGcCostTimeRspYoungItem) Reset() {
	*x = JvmGcCostTimeRspYoungItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmGcCostTimeRspYoungItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmGcCostTimeRspYoungItem) ProtoMessage() {}

func (x *JvmGcCostTimeRspYoungItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmGcCostTimeRspYoungItem.ProtoReflect.Descriptor instead.
func (*JvmGcCostTimeRspYoungItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{13, 1}
}

func (x *JvmGcCostTimeRspYoungItem) GetCostTime() int32 {
	if x != nil {
		return x.CostTime
	}
	return 0
}

func (x *JvmGcCostTimeRspYoungItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type JvmGcCostTimeRspJvmGcCostTimeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Old   []*JvmGcCostTimeRspOldItem   `protobuf:"bytes,1,rep,name=old,proto3" json:"old,omitempty"`
	Young []*JvmGcCostTimeRspYoungItem `protobuf:"bytes,2,rep,name=young,proto3" json:"young,omitempty"`
}

func (x *JvmGcCostTimeRspJvmGcCostTimeItem) Reset() {
	*x = JvmGcCostTimeRspJvmGcCostTimeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmGcCostTimeRspJvmGcCostTimeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmGcCostTimeRspJvmGcCostTimeItem) ProtoMessage() {}

func (x *JvmGcCostTimeRspJvmGcCostTimeItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmGcCostTimeRspJvmGcCostTimeItem.ProtoReflect.Descriptor instead.
func (*JvmGcCostTimeRspJvmGcCostTimeItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{13, 2}
}

func (x *JvmGcCostTimeRspJvmGcCostTimeItem) GetOld() []*JvmGcCostTimeRspOldItem {
	if x != nil {
		return x.Old
	}
	return nil
}

func (x *JvmGcCostTimeRspJvmGcCostTimeItem) GetYoung() []*JvmGcCostTimeRspYoungItem {
	if x != nil {
		return x.Young
	}
	return nil
}

type JvmMemPoolRspJvmMemPoolItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Init      int64 `protobuf:"varint,1,opt,name=init,proto3" json:"init,omitempty"`
	Max       int64 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	Used      int64 `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	Committed int64 `protobuf:"varint,4,opt,name=committed,proto3" json:"committed,omitempty"`
	Time      int64 `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *JvmMemPoolRspJvmMemPoolItem) Reset() {
	*x = JvmMemPoolRspJvmMemPoolItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmMemPoolRspJvmMemPoolItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmMemPoolRspJvmMemPoolItem) ProtoMessage() {}

func (x *JvmMemPoolRspJvmMemPoolItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmMemPoolRspJvmMemPoolItem.ProtoReflect.Descriptor instead.
func (*JvmMemPoolRspJvmMemPoolItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{15, 0}
}

func (x *JvmMemPoolRspJvmMemPoolItem) GetInit() int64 {
	if x != nil {
		return x.Init
	}
	return 0
}

func (x *JvmMemPoolRspJvmMemPoolItem) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *JvmMemPoolRspJvmMemPoolItem) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *JvmMemPoolRspJvmMemPoolItem) GetCommitted() int64 {
	if x != nil {
		return x.Committed
	}
	return 0
}

func (x *JvmMemPoolRspJvmMemPoolItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type JvmThreadRspJvmThreadItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiveCount         int32 `protobuf:"varint,1,opt,name=liveCount,proto3" json:"liveCount,omitempty"`
	DaemonCount       int32 `protobuf:"varint,2,opt,name=daemonCount,proto3" json:"daemonCount,omitempty"`
	PeakCount         int32 `protobuf:"varint,3,opt,name=peakCount,proto3" json:"peakCount,omitempty"`
	RunnableCount     int32 `protobuf:"varint,4,opt,name=runnableCount,proto3" json:"runnableCount,omitempty"`
	BlockedCount      int32 `protobuf:"varint,5,opt,name=blockedCount,proto3" json:"blockedCount,omitempty"`
	WaitingCount      int32 `protobuf:"varint,6,opt,name=waitingCount,proto3" json:"waitingCount,omitempty"`
	TimedWaitingCount int32 `protobuf:"varint,7,opt,name=timedWaitingCount,proto3" json:"timedWaitingCount,omitempty"`
	Time              int64 `protobuf:"varint,8,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *JvmThreadRspJvmThreadItem) Reset() {
	*x = JvmThreadRspJvmThreadItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmThreadRspJvmThreadItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmThreadRspJvmThreadItem) ProtoMessage() {}

func (x *JvmThreadRspJvmThreadItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmThreadRspJvmThreadItem.ProtoReflect.Descriptor instead.
func (*JvmThreadRspJvmThreadItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{17, 0}
}

func (x *JvmThreadRspJvmThreadItem) GetLiveCount() int32 {
	if x != nil {
		return x.LiveCount
	}
	return 0
}

func (x *JvmThreadRspJvmThreadItem) GetDaemonCount() int32 {
	if x != nil {
		return x.DaemonCount
	}
	return 0
}

func (x *JvmThreadRspJvmThreadItem) GetPeakCount() int32 {
	if x != nil {
		return x.PeakCount
	}
	return 0
}

func (x *JvmThreadRspJvmThreadItem) GetRunnableCount() int32 {
	if x != nil {
		return x.RunnableCount
	}
	return 0
}

func (x *JvmThreadRspJvmThreadItem) GetBlockedCount() int32 {
	if x != nil {
		return x.BlockedCount
	}
	return 0
}

func (x *JvmThreadRspJvmThreadItem) GetWaitingCount() int32 {
	if x != nil {
		return x.WaitingCount
	}
	return 0
}

func (x *JvmThreadRspJvmThreadItem) GetTimedWaitingCount() int32 {
	if x != nil {
		return x.TimedWaitingCount
	}
	return 0
}

func (x *JvmThreadRspJvmThreadItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type JvmClassRspJvmClassItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoadedCount        int32 `protobuf:"varint,1,opt,name=loadedCount,proto3" json:"loadedCount,omitempty"`
	TotalUnloadedCount int32 `protobuf:"varint,2,opt,name=totalUnloadedCount,proto3" json:"totalUnloadedCount,omitempty"`
	TotalLoadedCount   int32 `protobuf:"varint,3,opt,name=totalLoadedCount,proto3" json:"totalLoadedCount,omitempty"`
	Time               int64 `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *JvmClassRspJvmClassItem) Reset() {
	*x = JvmClassRspJvmClassItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JvmClassRspJvmClassItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JvmClassRspJvmClassItem) ProtoMessage() {}

func (x *JvmClassRspJvmClassItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JvmClassRspJvmClassItem.ProtoReflect.Descriptor instead.
func (*JvmClassRspJvmClassItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{19, 0}
}

func (x *JvmClassRspJvmClassItem) GetLoadedCount() int32 {
	if x != nil {
		return x.LoadedCount
	}
	return 0
}

func (x *JvmClassRspJvmClassItem) GetTotalUnloadedCount() int32 {
	if x != nil {
		return x.TotalUnloadedCount
	}
	return 0
}

func (x *JvmClassRspJvmClassItem) GetTotalLoadedCount() int32 {
	if x != nil {
		return x.TotalLoadedCount
	}
	return 0
}

func (x *JvmClassRspJvmClassItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type GoMemRspGoMemItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalAlloc int64 `protobuf:"varint,1,opt,name=totalAlloc,proto3" json:"totalAlloc,omitempty"`
	Alloc      int64 `protobuf:"varint,2,opt,name=alloc,proto3" json:"alloc,omitempty"`
	HeapAlloc  int64 `protobuf:"varint,3,opt,name=heapAlloc,proto3" json:"heapAlloc,omitempty"`
	HeapInuse  int64 `protobuf:"varint,4,opt,name=heapInuse,proto3" json:"heapInuse,omitempty"`
	Time       int64 `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *GoMemRspGoMemItem) Reset() {
	*x = GoMemRspGoMemItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoMemRspGoMemItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoMemRspGoMemItem) ProtoMessage() {}

func (x *GoMemRspGoMemItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoMemRspGoMemItem.ProtoReflect.Descriptor instead.
func (*GoMemRspGoMemItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{21, 0}
}

func (x *GoMemRspGoMemItem) GetTotalAlloc() int64 {
	if x != nil {
		return x.TotalAlloc
	}
	return 0
}

func (x *GoMemRspGoMemItem) GetAlloc() int64 {
	if x != nil {
		return x.Alloc
	}
	return 0
}

func (x *GoMemRspGoMemItem) GetHeapAlloc() int64 {
	if x != nil {
		return x.HeapAlloc
	}
	return 0
}

func (x *GoMemRspGoMemItem) GetHeapInuse() int64 {
	if x != nil {
		return x.HeapInuse
	}
	return 0
}

func (x *GoMemRspGoMemItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type GoGcCountRspGoGcCountItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GcCount int32 `protobuf:"varint,1,opt,name=gcCount,proto3" json:"gcCount,omitempty"`
	Time    int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *GoGcCountRspGoGcCountItem) Reset() {
	*x = GoGcCountRspGoGcCountItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoGcCountRspGoGcCountItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoGcCountRspGoGcCountItem) ProtoMessage() {}

func (x *GoGcCountRspGoGcCountItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoGcCountRspGoGcCountItem.ProtoReflect.Descriptor instead.
func (*GoGcCountRspGoGcCountItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{23, 0}
}

func (x *GoGcCountRspGoGcCountItem) GetGcCount() int32 {
	if x != nil {
		return x.GcCount
	}
	return 0
}

func (x *GoGcCountRspGoGcCountItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type GoroutineCountRspGoroutineCountItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoroutineCount int32 `protobuf:"varint,1,opt,name=goroutineCount,proto3" json:"goroutineCount,omitempty"`
	Time           int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *GoroutineCountRspGoroutineCountItem) Reset() {
	*x = GoroutineCountRspGoroutineCountItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_Metric_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoroutineCountRspGoroutineCountItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoroutineCountRspGoroutineCountItem) ProtoMessage() {}

func (x *GoroutineCountRspGoroutineCountItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_Metric_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoroutineCountRspGoroutineCountItem.ProtoReflect.Descriptor instead.
func (*GoroutineCountRspGoroutineCountItem) Descriptor() ([]byte, []int) {
	return file_query_Metric_proto_rawDescGZIP(), []int{25, 0}
}

func (x *GoroutineCountRspGoroutineCountItem) GetGoroutineCount() int32 {
	if x != nil {
		return x.GoroutineCount
	}
	return 0
}

func (x *GoroutineCountRspGoroutineCountItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

var File_query_Metric_proto protoreflect.FileDescriptor

var file_query_Metric_proto_rawDesc = []byte{
	0x0a, 0x12, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x1a, 0x13, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc4,
	0x01, 0x0a, 0x0b, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x73, 0x70, 0x12, 0x24,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x64,
	0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64,
	0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x73, 0x70, 0x2e, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3e, 0x0a, 0x0c, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x46, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x46, 0x64, 0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x6d, 0x6f,
	0x2e, 0x76, 0x33, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x65, 0x6d, 0x6f,
	0x2e, 0x76, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x46,
	0x64, 0x52, 0x73, 0x70, 0x2e, 0x66, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x2c, 0x0a, 0x06, 0x66, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x66,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x66, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0xaf, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x73, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xbc, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e,
	0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x52, 0x73, 0x73, 0x52, 0x73,
	0x70, 0x2e, 0x72, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x2f, 0x0a, 0x07, 0x72, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0xb7, 0x01, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x19, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33,
	0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x47, 0x0a, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x0b, 0x4a, 0x76,
	0x6d, 0x4d, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76,
	0x33, 0x2e, 0x48, 0x65, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x68, 0x65,
	0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf8, 0x01, 0x0a, 0x09, 0x4a, 0x76, 0x6d,
	0x4d, 0x65, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x45,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x4a,
	0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x52, 0x73, 0x70, 0x2e, 0x6a, 0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x78, 0x0a, 0x0a, 0x6a, 0x76, 0x6d,
	0x4d, 0x65, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x0f, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xf2, 0x02, 0x0a, 0x0d, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x47,
	0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x6a, 0x76, 0x6d, 0x47, 0x63, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x33,
	0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x1a, 0x35, 0x0a, 0x09, 0x79, 0x6f, 0x75, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x7a, 0x0a, 0x0e, 0x6a, 0x76,
	0x6d, 0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x03,
	0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x65, 0x6d, 0x6f,
	0x2e, 0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73,
	0x70, 0x2e, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x03, 0x6f, 0x6c, 0x64, 0x12, 0x36,
	0x0a, 0x05, 0x79, 0x6f, 0x75, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x79, 0x6f, 0x75, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x79, 0x6f, 0x75, 0x6e, 0x67, 0x22, 0xae, 0x01, 0x0a, 0x12, 0x4a, 0x76, 0x6d, 0x47, 0x63,
	0x43, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x91, 0x03, 0x0a, 0x10, 0x4a, 0x76, 0x6d, 0x47,
	0x63, 0x43, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x6d,
	0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x65, 0x6d,
	0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x43, 0x6f, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x6a, 0x76, 0x6d, 0x47, 0x63, 0x43, 0x6f, 0x73, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x39, 0x0a,
	0x07, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x3b, 0x0a, 0x09, 0x79, 0x6f, 0x75, 0x6e,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x83, 0x01, 0x0a, 0x11, 0x6a, 0x76, 0x6d, 0x47, 0x63, 0x43,
	0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x33, 0x0a, 0x03, 0x6f,
	0x6c, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x43, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x73, 0x70, 0x2e, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x03, 0x6f, 0x6c, 0x64,
	0x12, 0x39, 0x0a, 0x05, 0x79, 0x6f, 0x75, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x43,
	0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x79, 0x6f, 0x75, 0x6e, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x79, 0x6f, 0x75, 0x6e, 0x67, 0x22, 0xab, 0x01, 0x0a, 0x0f,
	0x4a, 0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x88, 0x02, 0x0a, 0x0d, 0x4a, 0x76,
	0x6d, 0x4d, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x6d, 0x6f,
	0x2e, 0x76, 0x33, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x6d, 0x6f,
	0x2e, 0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x73,
	0x70, 0x2e, 0x6a, 0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x7c, 0x0a, 0x0e, 0x6a, 0x76, 0x6d, 0x4d, 0x65, 0x6d,
	0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x4a, 0x76, 0x6d, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xa7, 0x03, 0x0a, 0x0c, 0x4a, 0x76, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52,
	0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x52, 0x73, 0x70, 0x2e, 0x6a, 0x76, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x9d, 0x02, 0x0a, 0x0d,
	0x6a, 0x76, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x65, 0x61, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x65, 0x61, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72,
	0x75, 0x6e, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x77, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x69, 0x6d,
	0x65, 0x64, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x57, 0x61, 0x69, 0x74, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x0d,
	0x4a, 0x76, 0x6d, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa7, 0x02, 0x0a, 0x0b, 0x4a, 0x76, 0x6d, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e,
	0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e,
	0x4a, 0x76, 0x6d, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x73, 0x70, 0x2e, 0x6a, 0x76, 0x6d, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xa0,
	0x01, 0x0a, 0x0c, 0x6a, 0x76, 0x6d, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0xa6, 0x01, 0x0a, 0x0a, 0x47, 0x6f, 0x4d, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8f, 0x02, 0x0a, 0x08, 0x47,
	0x6f, 0x4d, 0x65, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e,
	0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e,
	0x47, 0x6f, 0x4d, 0x65, 0x6d, 0x52, 0x73, 0x70, 0x2e, 0x67, 0x6f, 0x4d, 0x65, 0x6d, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x91, 0x01, 0x0a, 0x09, 0x67, 0x6f, 0x4d,
	0x65, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x12, 0x1c, 0x0a, 0x09,
	0x68, 0x65, 0x61, 0x70, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x68, 0x65, 0x61, 0x70, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65,
	0x61, 0x70, 0x49, 0x6e, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x68,
	0x65, 0x61, 0x70, 0x49, 0x6e, 0x75, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xaa, 0x01, 0x0a,
	0x0e, 0x47, 0x6f, 0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x0c, 0x47, 0x6f,
	0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x76, 0x33, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x76, 0x33, 0x2e, 0x47, 0x6f, 0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x2e,
	0x67, 0x6f, 0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x3d, 0x0a, 0x0d, 0x67, 0x6f, 0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x13, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xe8, 0x01, 0x0a, 0x11, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x76, 0x33, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x76, 0x33, 0x2e, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x73, 0x70, 0x2e, 0x67, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x50, 0x0a,
	0x12, 0x67, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x6f, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x2a,
	0x22, 0x0a, 0x0a, 0x48, 0x65, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a,
	0x06, 0x4e, 0x6f, 0x48, 0x65, 0x61, 0x70, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x65, 0x61,
	0x70, 0x10, 0x01, 0x32, 0x89, 0x07, 0x0a, 0x12, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x2e, 0x64, 0x65,
	0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x43, 0x70,
	0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x12, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x46,
	0x64, 0x12, 0x1b, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x46, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x19,
	0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x46, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x13, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x73, 0x73, 0x12, 0x1c, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x52, 0x73, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x1a, 0x1a, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x52, 0x73, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x69,
	0x0a, 0x1b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x2e,
	0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x1a, 0x22, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x53, 0x69, 0x7a, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0b, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x4a, 0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x12, 0x14, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x12,
	0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x52,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x76, 0x6d,
	0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76,
	0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x1a, 0x16, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x47,
	0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x12, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x43, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1b, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x47,
	0x63, 0x43, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x19,
	0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x43, 0x6f,
	0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x4a, 0x76, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x17, 0x2e,
	0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x15, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33,
	0x2e, 0x4a, 0x76, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x3f, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x76, 0x6d, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x16, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x76, 0x33, 0x2e, 0x4a, 0x76, 0x6d, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x36, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x47, 0x6f, 0x4d, 0x65, 0x6d, 0x12, 0x13,
	0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x6f, 0x4d, 0x65, 0x6d, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x1a, 0x11, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x6f,
	0x4d, 0x65, 0x6d, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x47, 0x6f, 0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x64, 0x65, 0x6d,
	0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x6f, 0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x1a, 0x15, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x6f,
	0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x13,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x6f,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x1a, 0x1a, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x6f, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x42,
	0x15, 0x5a, 0x13, 0x67, 0x6f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2f, 0x76, 0x33, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_query_Metric_proto_rawDescOnce sync.Once
	file_query_Metric_proto_rawDescData = file_query_Metric_proto_rawDesc
)

func file_query_Metric_proto_rawDescGZIP() []byte {
	file_query_Metric_proto_rawDescOnce.Do(func() {
		file_query_Metric_proto_rawDescData = protoimpl.X.CompressGZIP(file_query_Metric_proto_rawDescData)
	})
	return file_query_Metric_proto_rawDescData
}

var file_query_Metric_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_query_Metric_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_query_Metric_proto_goTypes = []interface{}{
	(HeapStatus)(0),                                  // 0: demo.v3.HeapStatus
	(*CpuUsageParam)(nil),                            // 1: demo.v3.CpuUsageParam
	(*CpuUsageRsp)(nil),                              // 2: demo.v3.CpuUsageRsp
	(*ProcessStatFdParam)(nil),                       // 3: demo.v3.ProcessStatFdParam
	(*ProcessStatFdRsp)(nil),                         // 4: demo.v3.ProcessStatFdRsp
	(*ProcessStatRssParam)(nil),                      // 5: demo.v3.ProcessStatRssParam
	(*ProcessStatRssRsp)(nil),                        // 6: demo.v3.ProcessStatRssRsp
	(*ProcessStatVirtualSizeParam)(nil),              // 7: demo.v3.ProcessStatVirtualSizeParam
	(*ProcessStatVirtualSizeRsp)(nil),                // 8: demo.v3.ProcessStatVirtualSizeRsp
	(*JvmMemParam)(nil),                              // 9: demo.v3.JvmMemParam
	(*JvmMemRsp)(nil),                                // 10: demo.v3.JvmMemRsp
	(*JvmGcCountParam)(nil),                          // 11: demo.v3.JvmGcCountParam
	(*JvmGcCountRsp)(nil),                            // 12: demo.v3.JvmGcCountRsp
	(*JvmGcCostTimeParam)(nil),                       // 13: demo.v3.JvmGcCostTimeParam
	(*JvmGcCostTimeRsp)(nil),                         // 14: demo.v3.JvmGcCostTimeRsp
	(*JvmMemPoolParam)(nil),                          // 15: demo.v3.JvmMemPoolParam
	(*JvmMemPoolRsp)(nil),                            // 16: demo.v3.JvmMemPoolRsp
	(*JvmThreadParam)(nil),                           // 17: demo.v3.JvmThreadParam
	(*JvmThreadRsp)(nil),                             // 18: demo.v3.JvmThreadRsp
	(*JvmClassParam)(nil),                            // 19: demo.v3.JvmClassParam
	(*JvmClassRsp)(nil),                              // 20: demo.v3.JvmClassRsp
	(*GoMemParam)(nil),                               // 21: demo.v3.GoMemParam
	(*GoMemRsp)(nil),                                 // 22: demo.v3.GoMemRsp
	(*GoGcCountParam)(nil),                           // 23: demo.v3.GoGcCountParam
	(*GoGcCountRsp)(nil),                             // 24: demo.v3.GoGcCountRsp
	(*GoroutineCountParam)(nil),                      // 25: demo.v3.GoroutineCountParam
	(*GoroutineCountRsp)(nil),                        // 26: demo.v3.GoroutineCountRsp
	(*CpuUsageRspCpuUsageItem)(nil),                  // 27: demo.v3.CpuUsageRsp.cpuUsageItem
	(*ProcessStatFdRspFdItem)(nil),                   // 28: demo.v3.ProcessStatFdRsp.fdItem
	(*ProcessStatRssRspRssItem)(nil),                 // 29: demo.v3.ProcessStatRssRsp.rssItem
	(*ProcessStatVirtualSizeRspVirtualSizeItem)(nil), // 30: demo.v3.ProcessStatVirtualSizeRsp.virtualSizeItem
	(*JvmMemRspJvmMemItem)(nil),                      // 31: demo.v3.JvmMemRsp.jvmMemItem
	(*JvmGcCountRspOldItem)(nil),                     // 32: demo.v3.JvmGcCountRsp.oldItem
	(*JvmGcCountRspYoungItem)(nil),                   // 33: demo.v3.JvmGcCountRsp.youngItem
	(*JvmGcCountRspJvmGcCountItem)(nil),              // 34: demo.v3.JvmGcCountRsp.jvmGcCountItem
	(*JvmGcCostTimeRspOldItem)(nil),                  // 35: demo.v3.JvmGcCostTimeRsp.oldItem
	(*JvmGcCostTimeRspYoungItem)(nil),                // 36: demo.v3.JvmGcCostTimeRsp.youngItem
	(*JvmGcCostTimeRspJvmGcCostTimeItem)(nil),        // 37: demo.v3.JvmGcCostTimeRsp.jvmGcCostTimeItem
	(*JvmMemPoolRspJvmMemPoolItem)(nil),              // 38: demo.v3.JvmMemPoolRsp.jvmMemPoolItem
	(*JvmThreadRspJvmThreadItem)(nil),                // 39: demo.v3.JvmThreadRsp.jvmThreadItem
	(*JvmClassRspJvmClassItem)(nil),                  // 40: demo.v3.JvmClassRsp.jvmClassItem
	(*GoMemRspGoMemItem)(nil),                        // 41: demo.v3.GoMemRsp.goMemItem
	(*GoGcCountRspGoGcCountItem)(nil),                // 42: demo.v3.GoGcCountRsp.goGcCountItem
	(*GoroutineCountRspGoroutineCountItem)(nil),      // 43: demo.v3.GoroutineCountRsp.goroutineCountItem
	(v3.ErrCode)(0),                                  // 44: demo.v3.ErrCode
}
var file_query_Metric_proto_depIdxs = []int32{
	44, // 0: demo.v3.CpuUsageRsp.code:type_name -> demo.v3.ErrCode
	27, // 1: demo.v3.CpuUsageRsp.data:type_name -> demo.v3.CpuUsageRsp.cpuUsageItem
	44, // 2: demo.v3.ProcessStatFdRsp.code:type_name -> demo.v3.ErrCode
	28, // 3: demo.v3.ProcessStatFdRsp.data:type_name -> demo.v3.ProcessStatFdRsp.fdItem
	44, // 4: demo.v3.ProcessStatRssRsp.code:type_name -> demo.v3.ErrCode
	29, // 5: demo.v3.ProcessStatRssRsp.data:type_name -> demo.v3.ProcessStatRssRsp.rssItem
	44, // 6: demo.v3.ProcessStatVirtualSizeRsp.code:type_name -> demo.v3.ErrCode
	30, // 7: demo.v3.ProcessStatVirtualSizeRsp.data:type_name -> demo.v3.ProcessStatVirtualSizeRsp.virtualSizeItem
	0,  // 8: demo.v3.JvmMemParam.heapStatus:type_name -> demo.v3.HeapStatus
	44, // 9: demo.v3.JvmMemRsp.code:type_name -> demo.v3.ErrCode
	31, // 10: demo.v3.JvmMemRsp.data:type_name -> demo.v3.JvmMemRsp.jvmMemItem
	44, // 11: demo.v3.JvmGcCountRsp.code:type_name -> demo.v3.ErrCode
	34, // 12: demo.v3.JvmGcCountRsp.data:type_name -> demo.v3.JvmGcCountRsp.jvmGcCountItem
	44, // 13: demo.v3.JvmGcCostTimeRsp.code:type_name -> demo.v3.ErrCode
	37, // 14: demo.v3.JvmGcCostTimeRsp.data:type_name -> demo.v3.JvmGcCostTimeRsp.jvmGcCostTimeItem
	44, // 15: demo.v3.JvmMemPoolRsp.code:type_name -> demo.v3.ErrCode
	38, // 16: demo.v3.JvmMemPoolRsp.data:type_name -> demo.v3.JvmMemPoolRsp.jvmMemPoolItem
	44, // 17: demo.v3.JvmThreadRsp.code:type_name -> demo.v3.ErrCode
	39, // 18: demo.v3.JvmThreadRsp.data:type_name -> demo.v3.JvmThreadRsp.jvmThreadItem
	44, // 19: demo.v3.JvmClassRsp.code:type_name -> demo.v3.ErrCode
	40, // 20: demo.v3.JvmClassRsp.data:type_name -> demo.v3.JvmClassRsp.jvmClassItem
	44, // 21: demo.v3.GoMemRsp.code:type_name -> demo.v3.ErrCode
	41, // 22: demo.v3.GoMemRsp.data:type_name -> demo.v3.GoMemRsp.goMemItem
	44, // 23: demo.v3.GoGcCountRsp.code:type_name -> demo.v3.ErrCode
	42, // 24: demo.v3.GoGcCountRsp.data:type_name -> demo.v3.GoGcCountRsp.goGcCountItem
	44, // 25: demo.v3.GoroutineCountRsp.code:type_name -> demo.v3.ErrCode
	43, // 26: demo.v3.GoroutineCountRsp.data:type_name -> demo.v3.GoroutineCountRsp.goroutineCountItem
	32, // 27: demo.v3.JvmGcCountRsp.jvmGcCountItem.old:type_name -> demo.v3.JvmGcCountRsp.oldItem
	33, // 28: demo.v3.JvmGcCountRsp.jvmGcCountItem.young:type_name -> demo.v3.JvmGcCountRsp.youngItem
	35, // 29: demo.v3.JvmGcCostTimeRsp.jvmGcCostTimeItem.old:type_name -> demo.v3.JvmGcCostTimeRsp.oldItem
	36, // 30: demo.v3.JvmGcCostTimeRsp.jvmGcCostTimeItem.young:type_name -> demo.v3.JvmGcCostTimeRsp.youngItem
	1,  // 31: demo.v3.MetricQueryService.queryCpuUsage:input_type -> demo.v3.CpuUsageParam
	3,  // 32: demo.v3.MetricQueryService.queryProcessStatFd:input_type -> demo.v3.ProcessStatFdParam
	5,  // 33: demo.v3.MetricQueryService.queryProcessStatRss:input_type -> demo.v3.ProcessStatRssParam
	7,  // 34: demo.v3.MetricQueryService.queryProcessStatVirtualSize:input_type -> demo.v3.ProcessStatVirtualSizeParam
	9,  // 35: demo.v3.MetricQueryService.queryJvmMem:input_type -> demo.v3.JvmMemParam
	11, // 36: demo.v3.MetricQueryService.queryJvmGcCount:input_type -> demo.v3.JvmGcCountParam
	13, // 37: demo.v3.MetricQueryService.queryJvmGcCostTime:input_type -> demo.v3.JvmGcCostTimeParam
	17, // 38: demo.v3.MetricQueryService.queryJvmThread:input_type -> demo.v3.JvmThreadParam
	19, // 39: demo.v3.MetricQueryService.queryJvmClass:input_type -> demo.v3.JvmClassParam
	21, // 40: demo.v3.MetricQueryService.queryGoMem:input_type -> demo.v3.GoMemParam
	23, // 41: demo.v3.MetricQueryService.queryGoGcCount:input_type -> demo.v3.GoGcCountParam
	25, // 42: demo.v3.MetricQueryService.queryGoroutineCount:input_type -> demo.v3.GoroutineCountParam
	2,  // 43: demo.v3.MetricQueryService.queryCpuUsage:output_type -> demo.v3.CpuUsageRsp
	4,  // 44: demo.v3.MetricQueryService.queryProcessStatFd:output_type -> demo.v3.ProcessStatFdRsp
	6,  // 45: demo.v3.MetricQueryService.queryProcessStatRss:output_type -> demo.v3.ProcessStatRssRsp
	8,  // 46: demo.v3.MetricQueryService.queryProcessStatVirtualSize:output_type -> demo.v3.ProcessStatVirtualSizeRsp
	10, // 47: demo.v3.MetricQueryService.queryJvmMem:output_type -> demo.v3.JvmMemRsp
	12, // 48: demo.v3.MetricQueryService.queryJvmGcCount:output_type -> demo.v3.JvmGcCountRsp
	14, // 49: demo.v3.MetricQueryService.queryJvmGcCostTime:output_type -> demo.v3.JvmGcCostTimeRsp
	18, // 50: demo.v3.MetricQueryService.queryJvmThread:output_type -> demo.v3.JvmThreadRsp
	20, // 51: demo.v3.MetricQueryService.queryJvmClass:output_type -> demo.v3.JvmClassRsp
	22, // 52: demo.v3.MetricQueryService.queryGoMem:output_type -> demo.v3.GoMemRsp
	24, // 53: demo.v3.MetricQueryService.queryGoGcCount:output_type -> demo.v3.GoGcCountRsp
	26, // 54: demo.v3.MetricQueryService.queryGoroutineCount:output_type -> demo.v3.GoroutineCountRsp
	43, // [43:55] is the sub-list for method output_type
	31, // [31:43] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_query_Metric_proto_init() }
func file_query_Metric_proto_init() {
	if File_query_Metric_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_query_Metric_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CpuUsageParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CpuUsageRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessStatFdParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessStatFdRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessStatRssParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessStatRssRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessStatVirtualSizeParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessStatVirtualSizeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmMemParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmMemRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmGcCountParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmGcCountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmGcCostTimeParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmGcCostTimeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmMemPoolParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmMemPoolRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmThreadParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmThreadRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmClassParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmClassRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoMemParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoMemRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoGcCountParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoGcCountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoroutineCountParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoroutineCountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CpuUsageRspCpuUsageItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessStatFdRspFdItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessStatRssRspRssItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessStatVirtualSizeRspVirtualSizeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmMemRspJvmMemItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmGcCountRspOldItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmGcCountRspYoungItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmGcCountRspJvmGcCountItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmGcCostTimeRspOldItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmGcCostTimeRspYoungItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmGcCostTimeRspJvmGcCostTimeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmMemPoolRspJvmMemPoolItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmThreadRspJvmThreadItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JvmClassRspJvmClassItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoMemRspGoMemItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoGcCountRspGoGcCountItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_Metric_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoroutineCountRspGoroutineCountItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_query_Metric_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_query_Metric_proto_goTypes,
		DependencyIndexes: file_query_Metric_proto_depIdxs,
		EnumInfos:         file_query_Metric_proto_enumTypes,
		MessageInfos:      file_query_Metric_proto_msgTypes,
	}.Build()
	File_query_Metric_proto = out.File
	file_query_Metric_proto_rawDesc = nil
	file_query_Metric_proto_goTypes = nil
	file_query_Metric_proto_depIdxs = nil
}
